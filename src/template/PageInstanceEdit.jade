include ./header.jade

h1 Page #{data.instance.page.name} bearbeiten

- var getValue = function(fieldId) {
- 	for (var i = 0; i < data.instance.values.length; ++i) {
-		var value = data.instance.values[i];
-		if (value.field == fieldId) return value.value;
- 	}
- }

include ./errors.jade

if status = 'success'
	p.success Die Page wurde erfolgreich aktualisiert

form(method="POST" action="/PageInstanceEdit?sessionId=#{data.sessionId}")
	each field in data.instance.page.fields
<<<<<<< HEAD
		if true || field.active
			label #{field.label}
			case field.type
				when 'BOOLEAN'
					select(name="#{field._id}")
						option(selected=getValue(field._id) == 'Ja') Ja
						option(selected=getValue(field._id) == 'Nein') Nein
				when 'DATE'
					input(type="date" name="#{field._id}" value=getValue(field._id))
				when 'LONGTEXT'
					textarea #{getValue(field._id)}
				when 'MAIL'
					input(type="email" name="#{field._id}" value=getValue(field._id))
				when 'MONEY'
					input(type='number' step="0.01" min="0" name="#{field._id}" value=getValue(field._id))
				when 'NUMBER'
					input(type='number' name="#{field._id}" value=getValue(field._id))
				when 'SELECT'
					select(name="#{field._id}" value=getValue(field._id))
						each selectable in field.selectables
							option #{selectable}
				when 'SELECTMULTI'
					select(multiple="multiple" name="#{field._id}" value=getValue(field._id))
						each selectable in field.selectables
							option #{selectable}
				when 'TEXT'
					input(type="text" name="#{field._id}" value=getValue(field._id))
=======
		if field.active
			div.field
				label #{field.label}
				case field.type
					when 'BOOLEAN'
						select
							option Ja
							option Nein
					when 'DATE'
						input(type="date")
					when 'LONGTEXT'
						textarea
					when 'MAIL'
						input(type="email")
					when 'MONEY'
						input(type='number' step="0.01" min="0")
					when 'NUMBER'
						input(type='number')
					when 'SELECT'
						select
							each selectable in field.selectables
								option #{selectable}
					when 'SELECTMULTI'
						select(multiple="multiple")
							each selectable in field.selectables
								option #{selectable}
					when 'TEXT'
						input(type="text")
>>>>>>> origin/master
	input(type="hidden" name="instanceId" value="#{data.instance._id}")
	input(type="submit" value="aktualisieren")
